// Mocks generated by Mockito 5.4.2 from annotations
// in softdesign_marvel/test/unit/data/repository/comic_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:softdesign_marvel/src/data/datasource/comics_datasource.dart'
    as _i3;
import 'package:softdesign_marvel/src/domain/entity/fetch_comic.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFetchComic_0 extends _i1.SmartFake implements _i2.FetchComic {
  _FakeFetchComic_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ComicDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockComicDatasource extends _i1.Mock implements _i3.ComicDatasource {
  @override
  _i4.Future<_i2.FetchComic> get(
    String? idCharacter, {
    int? offset,
    int? quantity,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [idCharacter],
          {
            #offset: offset,
            #quantity: quantity,
          },
        ),
        returnValue: _i4.Future<_i2.FetchComic>.value(_FakeFetchComic_0(
          this,
          Invocation.method(
            #get,
            [idCharacter],
            {
              #offset: offset,
              #quantity: quantity,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.FetchComic>.value(_FakeFetchComic_0(
          this,
          Invocation.method(
            #get,
            [idCharacter],
            {
              #offset: offset,
              #quantity: quantity,
            },
          ),
        )),
      ) as _i4.Future<_i2.FetchComic>);
}
